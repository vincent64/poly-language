¦ The Vector class represents a mathematical vector with a fixed size.
¦ @author Vincent Philippe (@vincent64)
¦ @version 0.1
¦ @update 0.3
¦
class+ Vector {
    ¦ The vector size.
    ~ const int size;

    ¦ Constructs a vector with the given size.
    ¦ @param size the vector size (size > 0)
    ¦
    fn+ constructor(const int size) {
        assert(size > 0) : new InvalidVectorSizeException();
        this.size = size;
    }

    ¦ Returns the size of the vector.
    ¦ @returns the vector size
    ¦
    fn+ int size() {
        return size;
    }

    ¦ The Vector.Property interface describes the properties of a vector and
    ¦ provides methods to check those properties.
    ¦
    interface+ Property {

        ¦ Returns whether the current vector is a unit vector.
        ¦ A vector is a unit vector if its length is equal to zero.
        ¦ @returns true if the the vector is unit
        fn bool isUnit();
    }

    ¦ The InvalidVectorSizeException is thrown when there is an attempt
    ¦ to construct a vector with an invalid size (below 1).
    ¦
    exception~ InvalidVectorSizeException {
        fn~ constructor() super("Vector size must be greater or equal to 1.");
    }

    ¦ The IndexOutOfBoundsException is thrown when an index out of
    ¦ the vector bounds (below 0 or above vector size) is used.
    ¦
    exception~ IndexOutOfBoundsException {
        fn~ constructor() super("Index is out of vector bounds.");
    }

    ¦ The VectorDimensionMismatchException is thrown when there is a
    ¦ dimension mismatch when applying an operation between two vectors.
    ¦
    exception~ VectorDimensionMismatchException {
        fn~ constructor() super("The vector dimensions do not match.");
    }
}